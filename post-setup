#!/bin/bash

# ======================================================================#
# >>>           VARIÁVEIS
# ----------------------------------------------------------------------#

# --- COLORS
  Bold=$(tput bold)
  Underline=$(tput sgr 0 1)
  Reset=$(tput sgr0)
  # Regular Colors
  Red=$(tput setaf 1)
  Green=$(tput setaf 2)
  Yellow=$(tput setaf 3)
  Blue=$(tput setaf 4)
  Purple=$(tput setaf 5)
  Cyan=$(tput setaf 6)
  White=$(tput setaf 7)
  # Bold
  BRed=${Bold}${Red}
  BGreen=${Bold}${Green}
  BYellow=${Bold}${Yellow}
  BBlue=${Bold}${Blue}
  BPurple=${Bold}${Purple}
  BCyan=${Bold}${Cyan}
  BWhite=${Bold}${White}

# ====================================================================== #
# >>>           FUNÇÕES PRINCIPAIS
# ---------------------------------------------------------------------- #

create_new_user() {
  print_title "CONFIGURANDO NOVO USUÁRIO..."
  printf "%s" "Nome de usuário: "
  read -r NEW_USER
  NEW_USER=$(echo "$NEW_USER" | tr '[:upper:]' '[:lower:]')
  useradd -m -g users -G wheel ${NEW_USER}
  echo "Usuário ${NEW_USER} criado..."
  echo ""
  echo "Definir senha do usuário..."
  passwd ${NEW_USER}
  print_warning " Adicionando privilégios ao usuário..."
  sed -i '/%wheel ALL=(ALL) ALL/s/^# //' /etc/sudoers
  print_warning " CONCLUÍDO!"
  pause_function
}

enable_multilib(){
  print_title "HABILITANDO REPOSITÓRIO MULTILIB..."
  ARCHI=$(uname -m)
  if [[ $ARCHI == x86_64 ]]; then
    local _has_multilib=$(grep -n "\[multilib\]" /etc/pacman.conf | cut -f1 -d:)
    if [[ -z $_has_multilib ]]; then
      echo -e "\n[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
      echo -e '\nRepositório Multilib adicionado ao arquivo pacman.conf'
    else
      sed -i "${_has_multilib}s/^#//" /etc/pacman.conf
      local _has_multilib=$(( _has_multilib + 1 ))
      sed -i "${_has_multilib}s/^#//" /etc/pacman.conf
    fi
  fi
  pacman -Syy
  print_warning " CONCLUÍDO!"
  pause_function
}

install_xorg() {
  print_title "INSTALANDO XORG..."
  pacman -S --needed --noconfirm \
  xorg xorg-apps xorg-xinit \
  xf86-input-synaptics \
  xf86-input-libinput \
  xterm
  print_warning " CONCLUÍDO!"
  pause_function
}

install_vga() {
  print_title "INSTALANDO DRIVER DE VÍDEO..."
  pacman -S --needed --noconfirm \
  xf86-video-vmware \
  virtualbox-guest-utils \
  virtualbox-guest-dkms \
  mesa mesa-libgl \
  libvdpau-va-gl
  print_warning " CONCLUÍDO!"
  pause_function
}

finish() {
  print_title "FINALIZANDO PÓS INSTALAÇÃO"
  print_warning " Copiando arquivos para o usuário concluir a instalação..."
  mv /root/myarch /home/${NEW_USER}/
  chown -R ${NEW_USER} /home/${NEW_USER}/myarch
  print_warning " CONCLUÍDO!"
}

# ======================================================================#
# >>>           OUTRAS FUNÇÕES
# ----------------------------------------------------------------------#

print_line() {
  printf "%$(tput cols)s\n"|tr ' ' '-'
}

print_title() {
  clear
  print_line
  echo -e "${BPurple}# $1${Reset}"
  print_line
  echo ""
}

print_warning() {
  T_COLS=$(tput cols)
  echo -e "\n${BGreen}$1${Reset}\n" | fold -sw $(( T_COLS - 1 ))
}

pause_function() { #{{{
  print_line
  read -e -sn 1 -p "Pressione qualquer tecla para continuar..."
}

# ====================================================================== #
# >>>           INSTALAÇÃO
# ---------------------------------------------------------------------- #

create_new_user
enable_multilib
install_xorg
install_vga
finish

#!/bin/bash

# ======================================================================#
# >>>           VARIÁVEIS
# ----------------------------------------------------------------------#

# --- COLORS
  Bold=$(tput bold)
  Underline=$(tput sgr 0 1)
  Reset=$(tput sgr0)
  # Regular Colors
  Red=$(tput setaf 1)
  Green=$(tput setaf 2)
  Yellow=$(tput setaf 3)
  Blue=$(tput setaf 4)
  Purple=$(tput setaf 5)
  Cyan=$(tput setaf 6)
  White=$(tput setaf 7)
  # Bold
  BRed=${Bold}${Red}
  BGreen=${Bold}${Green}
  BYellow=${Bold}${Yellow}
  BBlue=${Bold}${Blue}
  BPurple=${Bold}${Purple}
  BCyan=${Bold}${Cyan}
  BWhite=${Bold}${White}

# ====================================================================== #
# >>>           FUNÇÕES PRINCIPAIS
# ---------------------------------------------------------------------- #

check_user() {
  if [[ "$(id -u)" == "0" ]]; then
    echo " ERRO! Você só pode executar esse script como usuário comum."
    break
    exit 0
  fi
}

enable_multilib(){
  print_title "HABILITANDO REPOSITÓRIO MULTILIB..."
  ARCHI=$(uname -m)
  if [[ $ARCHI == x86_64 ]]; then
    local _has_multilib=$(grep -n "\[multilib\]" /etc/pacman.conf | cut -f1 -d:)
    if [[ -z $_has_multilib ]]; then
      sudo echo -e "\n[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
      echo -e '\nRepositório Multilib adicionado ao arquivo pacman.conf'
    else
      sudo sed -i "${_has_multilib}s/^#//" /etc/pacman.conf
      local _has_multilib=$(( _has_multilib + 1 ))
      sudo sed -i "${_has_multilib}s/^#//" /etc/pacman.conf
    fi
  fi
  print_warning " CONCLUÍDO!"
  pause_function
}

install_pacman_pkgs() {
  print_title "INSTALANDO PACOTES EXTRAS..."
  sudo pacman -S --needed --noconfirm \
    libreoffice-fresh \
    libreoffice-fresh-pt-br \
    firefox \
    firefox-i18n-pt-br \
    steam \
    gimp \
    inkscape \
    virtualbox \
    virtualbox-host-dkms \
    vlc \
    transmission-gtk \
    snapper \
    telegram-desktop \
    simplescreenrecorder \
    redshift \
    adapta-gtk-theme \
    arc-gtk-theme \
    papirus-icon-theme \
    capitaine-cursors \
    ttf-dejavu \
    ttf-hack
  print_warning " CONCLUÍDO!"
  pause_function
}

install_aur_helper() {
  print_title "INSTALANDO YAY..."
  sudo pacman -S --needed git go --noconfirm
  sudo pacman -D --asdeps go
  xdg-user-dirs-update
  if [[ -d /home/$USER/yay ]]; then
    rm -rf /home/$USER/yay
  else
    git clone https://aur.archlinux.org/yay.git /home/$USER/yay
    cd /home/$USER/yay
    makepkg -csi --noconfirm
    rm -rf /home/$USER/yay
  fi
  print_warning " CONCLUÍDO!"
  pause_function
}

install_aur_pkgs() {
  print_title "INSTALANDO PACOTES EXTRAS (AUR)..."
  yay -S --needed --noconfirm \
    pamac-aur \
    google-chrome \
    spotify \
    dropbox \
    thunar-dropbox \
    visual-studio-code-bin \
    timeshift \
    davinci-resolve \
    brave \
    stacer \
    balena-etcher \
    aic94xx-firmware \
    wd719x-firmware
  print_warning " CONCLUÍDO!"
  pause_function
}

# ======================================================================#
# >>>           OUTRAS FUNÇÕES
# ----------------------------------------------------------------------#

print_line() {
  printf "%$(tput cols)s\n"|tr ' ' '-'
}

print_title() {
  clear
  print_line
  echo -e "${BPurple}# $1${Reset}"
  print_line
  echo ""
}

print_warning() {
  T_COLS=$(tput cols)
  echo -e "\n${BGreen}$1${Reset}\n" | fold -sw $(( T_COLS - 1 ))
}

pause_function() { #{{{
  print_line
  read -e -sn 1 -p "Pressione qualquer tecla para continuar..."
}

# ====================================================================== #
# >>>           INSTALAÇÃO
# ---------------------------------------------------------------------- #

check_user
xdg-user-dirs-update
enable_multilib
install_pacman_pkgs
install_aur_helper
install_aur_pkgs
